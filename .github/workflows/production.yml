name: Production DevOps

on:
  push:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REPOSITORY: ${{ secrets.IMAGE_NAME }}
        IMAGE_TAG: prod-${{ github.sha }}
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REPOSITORY:$IMAGE_TAG

    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
      
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1    

    - uses: Azure/k8s-set-context@v1
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}

    - uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '${'
        tokenSuffix: '}'
        files: '["deploy/k8s/*.yaml"]'
      env:
        IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
        IMAGE_TAG: prod-${{ github.sha }}
        SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
        HOST_NAME: ${{ secrets.HOST_NAME }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_SCHEMA: ${{ secrets.DB_SCHEMA }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        API_KEY: ${{ secrets.API_KEY }}
        APPLE_SHARED_SECRET_KEY: ${{ secrets.APPLE_SHARED_SECRET_KEY }}
        
    - uses: Azure/k8s-deploy@v1
      with:
        namespace: ${{ secrets.NAMESPACE }}
        images: ${{ secrets.IMAGE_NAME }}:prod-${{ github.sha }}
        manifests: |
          deploy/k8s/0-secret.yaml
          deploy/k8s/1-config.yaml
          deploy/k8s/2-deployment.yaml
          deploy/k8s/3-service.yaml
          deploy/k8s/4-gateway.yaml
